{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.7", "generated_at": "2024-02-08T09:44:48.962615Z", "invocation_id": "de6f0b16-065b-4c50-9f32-27599c10ae78", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-08T09:44:34.232031Z", "completed_at": "2024-02-08T09:44:34.237059Z"}, {"name": "execute", "started_at": "2024-02-08T09:44:34.237821Z", "completed_at": "2024-02-08T09:44:35.111013Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.009932041168213, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b235e8-0000-37cc-0000-000027c150f9"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.case_deel.stg_globepay__acceptance_reports", "compiled": true, "compiled_code": "SELECT \n    external_ref        AS acceptance_ref,\n    status              AS acceptance_status,\n    source              AS acceptance_source,\n    ref                 AS acceptance_internal_ref,\n    date_time           AS acceptance_date_time,\n    state               AS acceptance_state,\n    cvv_provided        AS acceptance_cvv_provided,\n    amount              AS acceptance_amount,\n    country             AS acceptance_country,\n    currency            AS acceptance_currency,\n    rates               AS acceptance_rates\n    \nFROM raw_deel.globepay.acceptance_report", "relation_name": "dev_deel.dbt_vinicius.stg_globepay__acceptance_reports"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-02-08T09:44:35.308144Z", "completed_at": "2024-02-08T09:44:35.415313Z"}, {"name": "execute", "started_at": "2024-02-08T09:44:35.453542Z", "completed_at": "2024-02-08T09:44:36.237088Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.1054010391235352, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b235e8-0000-37d0-0000-000027c140f9"}, "message": null, "failures": 0, "unique_id": "test.case_deel.unique_stg_globepay__acceptance_reports_acceptance_ref.664704fda8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    acceptance_ref as unique_field,\n    count(*) as n_records\n\nfrom dev_deel.dbt_vinicius.stg_globepay__acceptance_reports\nwhere acceptance_ref is not null\ngroup by acceptance_ref\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-02-08T09:44:35.276724Z", "completed_at": "2024-02-08T09:44:35.364744Z"}, {"name": "execute", "started_at": "2024-02-08T09:44:35.365349Z", "completed_at": "2024-02-08T09:44:36.286359Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.1435110569000244, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b235e8-0000-37cc-0000-000027c150fd"}, "message": null, "failures": 0, "unique_id": "test.case_deel.not_null_stg_globepay__acceptance_reports_acceptance_ref.3cf5a424ee", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect acceptance_ref\nfrom dev_deel.dbt_vinicius.stg_globepay__acceptance_reports\nwhere acceptance_ref is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-02-08T09:44:35.251576Z", "completed_at": "2024-02-08T09:44:40.064653Z"}, {"name": "execute", "started_at": "2024-02-08T09:44:40.065416Z", "completed_at": "2024-02-08T09:44:40.968895Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 5.842647075653076, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b235e8-0000-37cc-0000-000027c15109"}, "message": null, "failures": 0, "unique_id": "test.case_deel.elementary_volume_anomalies_stg_globepay__acceptance_reports_day__1.677d7246b2", "compiled": true, "compiled_code": "\n  -- depends_on: dev_deel.dbt_vinicius.monitors_runs\n  -- depends_on: dev_deel.dbt_vinicius.data_monitoring_metrics\n  -- depends_on: dev_deel.dbt_vinicius.dbt_run_results\n\n  \n    -- depends_on: dev_deel.dbt_vinicius.monitors_runs\n    -- depends_on: dev_deel.dbt_vinicius.data_monitoring_metrics\n    -- depends_on: dev_deel.dbt_vinicius.dbt_run_results\n        \n        \n\n        \n        \n        \n        \n\n        \n\n        \n\n        \n        \n        \n        \n\n        \n        \n        \n\n        \n        \n        \n        \n\n        \n\n        \n        \n        \n\n        \n        \n        \n        \n\n        \n        \n        \n        \n\n        with anomaly_scores as (\n        select\n            id,\n            metric_id,\n            test_execution_id,\n            test_unique_id,\n            detected_at,\n            full_table_name,\n            column_name,\n            metric_name,\n            anomaly_score,\n            anomaly_score_threshold,\n            anomalous_value,\n            bucket_start,\n            bucket_end,\n            bucket_seasonality,\n            metric_value,\n            min_metric_value,\n            max_metric_value,\n            training_avg,\n            training_stddev,\n            training_set_size,\n            training_start,\n            training_end,\n            dimension,\n            dimension_value,\n            \n    case\n        when dimension is not null then \n    'The last ' || metric_name || ' value for dimension ' || dimension || ' - ' ||\n    case when dimension_value is null then 'NULL' else dimension_value end || ' is ' || cast(round(cast(metric_value as numeric(28,6)), 3) as varchar) ||\n    '. The average for this metric is ' || cast(round(cast(training_avg as numeric(28,6)), 3) as varchar) || '.'\n\n        when metric_name = 'freshness' then \n    'Last update was at ' || anomalous_value || ', ' || cast(abs(round(cast(metric_value/3600 as numeric(28,6)), 2)) as varchar) || ' hours ago. Usually the table is updated within ' || cast(abs(round(cast(training_avg/3600 as numeric(28,6)), 2)) as varchar) || ' hours.'\n\n        when column_name is null then \n    'The last ' || metric_name || ' value is ' || cast(round(cast(metric_value as numeric(28,6)), 3) as varchar) ||\n    '. The average for this metric is ' || cast(round(cast(training_avg as numeric(28,6)), 3) as varchar) || '.'\n\n        when column_name is not null then \n    'In column ' || column_name || ', the last ' || metric_name || ' value is ' || cast(round(cast(metric_value as numeric(28,6)), 3) as varchar) ||\n    '. The average for this metric is ' || cast(round(cast(training_avg as numeric(28,6)), 3) as varchar) || '.'\n\n        else null\n    end as anomaly_description\n,\n            max(bucket_end) over (partition by test_execution_id) as max_bucket_end\n        from dev_deel.dbt_vinicius.\"test_677d7246b2_elementary_volume_anomalies_stg_globepay__acceptance_reports_day__1__anomaly_scores__tmp_20240208094438143320\"\n      ),\n      anomaly_scores_with_is_anomalous as (\n        select\n          *,\ncase when\n            anomaly_score is not null and\n            (\n              \n  (\n    metric_value = 0 and \n    \n      1 = 2\n    \n  )\n or\n              (\n                case when metric_name IN \n        ( 'freshness' ,  'event_freshness'  )\n then\n            anomaly_score > 3\n    else\n        \n        abs(anomaly_score) > 3\n    \n\n     end and\n                \n  \n  \n  \n    \n        (1 = 1)\n    \n\n    and\n\n    \n        (1 = 1)\n    \n  \n              )\n            ) and\n            bucket_end >= \n    dateadd(day, cast('-2' as integer), cast(max_bucket_end as timestamp))\n\n          then TRUE else FALSE end as is_anomalous\n        from anomaly_scores\n      )\n\n      select\n        metric_value as value,\n        training_avg as average,\n        \n        case\n        when is_anomalous = TRUE and 'both' = 'spike' then\n         lag(metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value, bucket_seasonality order by bucket_end)\n        when is_anomalous = TRUE and 'both' != 'spike' then\n         lag(min_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value, bucket_seasonality order by bucket_end)\n        when 'both' = 'spike' then metric_value\n        else min_metric_value end as min_value,\n        case\n        when is_anomalous = TRUE and 'both' = 'drop' then\n         lag(metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value, bucket_seasonality order by bucket_end)\n        when is_anomalous = TRUE and 'both' != 'drop' then\n         lag(max_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value, bucket_seasonality order by bucket_end)\n        when 'both' = 'drop' then metric_value\n        else max_metric_value end as max_value,\n        bucket_start as start_time,\n        bucket_end as end_time,\n        *\n      from anomaly_scores_with_is_anomalous\n      order by bucket_end, dimension_value\n    \n\n\n", "relation_name": null}], "elapsed_time": 17.916395902633667, "args": {"introspect": true, "project_dir": "/Users/vinicius/Documents/case_deel/case_deel", "show": false, "print": true, "favor_state": false, "static_parser": true, "partial_parse": true, "log_path": "/Users/vinicius/Documents/case_deel/case_deel/logs", "indirect_selection": "eager", "log_level": "info", "which": "build", "version_check": true, "profiles_dir": "/Users/vinicius/.dbt", "vars": {}, "enable_legacy_logger": false, "send_anonymous_usage_stats": true, "quiet": false, "strict_mode": false, "use_colors_file": true, "warn_error_options": {"include": [], "exclude": []}, "partial_parse_file_diff": true, "macro_debugging": false, "populate_cache": true, "log_level_file": "debug", "log_file_max_bytes": 10485760, "resource_types": [], "select": ["stg_globepay__acceptance_reports"], "include_saved_query": false, "log_format": "default", "exclude": [], "use_colors": true, "show_resource_report": false, "printer_width": 80, "cache_selected_only": false, "write_json": true, "defer": false, "invocation_command": "dbt build --select stg_globepay__acceptance_reports", "log_format_file": "debug"}}